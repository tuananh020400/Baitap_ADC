/*
 * adc.cpp
 *
 * Created: 8/11/2020 4:31:46 PM
 * Author : Luong_Tuan_Anh
 */ 
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
unsigned char a[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
	
void hienthi(int i)
	{
		int tr,temp,ch ,dv;
		if (i<0)
		{
			temp = -i;
		}
		else
		{
			temp = i;
		}
		tr = temp/100;
		temp -= tr*100;
		ch = temp/10;
		dv = temp%10;
		
		PORTD = (1<<0);
		if (i>0)
		{
			PORTC = 0xff;
		} 
		else
		{
			PORTC = 0b10111111;
		}
		_delay_ms(5);
		PORTD = (0<<0);
		
		PORTD = (1<<1);
		PORTC = a[tr];
		_delay_ms(5);
		PORTD = (0<<1);
		
		PORTD = (1<<2);
		PORTC = a[ch];
		_delay_ms(5);
		PORTD = (0<<2);
		
		PORTD = (1<<3);
		PORTC = a[dv];
		_delay_ms(5);
		PORTD = (0<<3);
		
		PORTD = (1<<4);
		PORTC = 0b10011100;
		_delay_ms(5);
		PORTD = (0<<4);
		
		PORTD = (1<<5);
		PORTC = 0b11000110;
		_delay_ms(5);
		PORTD = (0<<5);
	}
int read_adc(unsigned char a)
{
	ADMUX = a|(1<<REFS0);
	ADCSRA |= (1<<ADEN) | (1<<ADPS1) | (1<<ADPS0);
	ADCSRA |= (1<<ADSC);
	while(!(ADCSRA&(1<<ADIF)));
		return ADC;	
}
int main(void)
{
    DDRC = 0xff;
	DDRD = 0xff;
    while (1) 
    {
		int i = (read_adc(0))*500/1023;
		hienthi(i);
    }
}

